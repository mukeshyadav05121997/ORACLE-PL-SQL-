Trigger is stored program which get occur when event trigger
we can write the code for dml,ddl as well as serverError ,logon etc;
Trigger could be defined with schema,table,view which ever trigger is associated;

Adventage of Trigger:
 1.Generating some derived column value automatically
 2.Enforcing refrential Integrity
 3.Event logging and strong information on table access;
 4.Auditing
 5.Synchoronous replication of table
 6.Imposing security authorization;
 7.Preventing Invalid transaction.
 
 =========================================================================================================================================================================
 Type of Trigger
  1.Row level Trigger
    Row level Trigger execute once for each row in a tranction
    if three is upadating then three trigger execute
  2.Statement Level Trigger
    Statement Trigger execute once in a tranction
    if there is upadation of three row then only Trigger perform
  3.Before Trigger
    Before Trigger the trigger action before the Trigger event(Update,delete,insert)
    example,To prevent deletion on sunday,for this we have to use statement level trigger on delete statement
  4.After Trigger
    Before Trigger the trigger action after the Trigger event(Update,delete,insert)
    example cascaded deletion
    
    
    example:CREATE TABLE audits (
      audit_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      table_name       VARCHAR2(255),
      transaction_name VARCHAR2(10),
      by_user          VARCHAR2(30),
      transaction_date DATE
);
Select * from audits;
CREATE OR REPLACE TRIGGER customers_audit_trg
    AFTER 
    UPDATE OR DELETE 
    ON Students
    FOR EACH ROW    
DECLARE
   l_transaction VARCHAR2(10);
BEGIN
   -- determine the transaction type
   l_transaction := CASE  
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO audits (table_name, transaction_name, by_user, transaction_date)
   VALUES('CUSTOMERS', l_transaction, USER, SYSDATE);
END;

UPDATE
   Students
SET
  Students_name='Richa'
WHERE
   Student_id =1
   
 
